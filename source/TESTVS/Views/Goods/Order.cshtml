@model TESTVS.Models.Order

@{
    ViewBag.Title = "Order";
}

@{
    var selectList = new SelectList(
        new List<SelectListItem>
        {
            new SelectListItem {Text = "Cash", Value = "Cash"},
            new SelectListItem {Text = "Transfer", Value = "Transfer"},
            new SelectListItem {Text = "Momo", Value = "Momo"}
        }, "Value", "Text");
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Good</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.GoodsId)

    @Html.HiddenFor(model => model.GoodsUnit)

    <div class="form-group">
        @Html.LabelFor(model => model.GoodsId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GoodsId, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.GoodsId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GoodsUnit, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GoodsUnit, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.GoodsUnit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.chargeState, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.chargeState, selectList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.chargeState, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
